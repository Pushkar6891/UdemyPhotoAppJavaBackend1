package com.photoapp.users.data;
// Without Fallback Factory
/*
import java.util.ArrayList;
import java.util.List;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.photoapp.users.ui.model.AlbumResponseModel;

@FeignClient(name = "albums-service", fallback = AlbumsFallback.class)
public interface AlbumsServiceFeignClient {

	@GetMapping("/users/{id}/albums")
	public List<AlbumResponseModel> getAlbums(@PathVariable String id);
}

// Fallback Class If Albums Service is down
@Component
class AlbumsFallback implements AlbumsServiceFeignClient{

	@Override
	public List<AlbumResponseModel> getAlbums(String id) {
		return new ArrayList<>();
	}
	
}
*/

// Using Fallback Factory
import java.util.ArrayList;
import java.util.List;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.stereotype.Component;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;

import com.photoapp.users.ui.model.AlbumResponseModel;

import feign.hystrix.FallbackFactory;

@FeignClient(name = "albums-service", fallbackFactory = AlbumsFallback.class)
public interface AlbumsServiceFeignClient {

	@GetMapping("/users/{id}/albums")
	public List<AlbumResponseModel> getAlbums(@PathVariable String id);
}

// Fallback Class If Albums Service is down
@Component
class AlbumsFallback implements FallbackFactory<AlbumsServiceFeignClient>{

	@Override
	public AlbumsServiceFeignClient create(Throwable cause) {
		// TODO Auto-generated method stub
		return null;
	}


}